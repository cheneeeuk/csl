静态方法

    在类加载的时候加载到方法区中,在方法区中不执行只存储,

    在方法被调用的时候到栈内存中执行,静态方法比对象要先出来所以可以通过类名来调用静态方法

    Arrays.toString();

    在静态方法中可以定义静态变量吗?---不可以---静态方法只有在被调用的时候才会执行,只有执行的时候才会将方法中的变量来进行初始化

        方法在栈内存中执行,所以方法中的变量也是存储在栈内存中,静态变量在类加载的时候初始化,静态变量存储在方法区

    在静态方法中可以直接调用本类中的非静态方法吗?---不可以---非静态方法在本类中是通过this来调用,this代表当前对象的引用

        静态方法在对象之前出来的,也就意味着静态方法执行的时候可以没有对象

    public class A{
        public void m1(){}

        public static void m2(){
            m1;
        }
    }

    静态方法是否可以重载?---可以

    静态方法可以重写吗?---不可以

    父子类中是否可以存在方法签名一致的静态方法?---可以---隐藏(hide)---如果父子类中存在了方法签名一致的方法,要么都是非静态,要么都是静态

静态代码块

    用static修饰的代码块就称之为静态代码块---只在类加载的时候执行一次

    执行顺序:父类静态->子类静态->父类构造->子类构造

    当一个类中既有static{}又有static变量的时候 遵循"先定义先执行"的原则

final
    修饰数据,方法以及类

    final修饰数据---常量,定义好之后值不可变

        如果是基本类型的常量,指的是实际值不可变,如果引用类型的常量,表示地址不可变,而其中的元素或者属性可以改变

        修饰非静态变量需在对象创建完之前给值

        修饰静态变量需要在类加载完成之前给值

    最终方法---不能被重写/隐藏,可以被重载,可以被继承

    最终类---不能被继承